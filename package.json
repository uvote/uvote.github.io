{
  "name": "uvote",
  "version": "0.0.0",
  "private": true,
  "description": "",
  "type": "module",
  "scripts": {
    "build": "npm run build_js",
    "build_formatjs_types": "node scripts/build_formatjs_types.js",
    "build_html": "node scripts/build_html.js",
    "build_js": "tsc && vite build",
    "build_manifest": "node scripts/build_manifest.js",
    "check_types": "tsc --noEmit --project .",
    "deploy": "node scripts/deploy.cjs",
    "eslint": "npm run eslint:scripts && npm run eslint:src",
    "eslint:scripts": "eslint --fix --ext .js scripts/",
    "eslint:src": "eslint --fix --ext .ts --ext .tsx src/",
    "formatjs_compile": "npm run formatjs_compile:en && npm run formatjs_compile:it",
    "formatjs_compile:en": "formatjs compile translations/en.json --ast --out-file public/translations/en-${npm_package_version}.json",
    "formatjs_compile:it": "formatjs compile translations/it.json --ast --out-file public/translations/it-${npm_package_version}.json",
    "generate_files": "npm run build_html && npm run build_manifest && npm run formatjs_compile && npm run build_formatjs_types",
    "jest": "jest",
    "lint-staged": "lint-staged",
    "postbuild": "cp dist/index.html dist/404.html",
    "postbuild_translations": "npm run build_formatjs_types",
    "prebuild": "npm run test && npm run build_formatjs_types && npm run check_types && npm run eslint && npm run build_html && npm run build_manifest",
    "preformatjs_compile": "rm -rf public/translations/",
    "predeploy": "npm run build",
    "prestart": "npm run generate_files",
    "pretest": "npm run formatjs_compile",
    "preview": "vite preview --host",
    "start": "vite --host",
    "test": "npm run jest",
    "wagmi_generate": "wagmi generate"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fibo/uvote.git"
  },
  "keywords": [],
  "author": "Gianluca Casati (http://fibo.github.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/fibo/uvote/issues"
  },
  "homepage": "https://uvote.github.io",
  "dependencies": {
    "buffer": "^6.0.3",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-intl": "^6.4.4",
    "react-router-dom": "^6.13.0",
    "trunx": "^0.45.7",
    "util": "^0.12.4",
    "viem": "~0.3.36",
    "wagmi": "^1.0.6"
  },
  "devDependencies": {
    "@formatjs/cli": "^6.1.3",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/react": "^18.0.9",
    "@types/react-dom": "^18.0.3",
    "@typescript-eslint/eslint-plugin": "^5.60.0",
    "@typescript-eslint/parser": "^5.60.0",
    "@vitejs/plugin-react": "^4.0.0",
    "@wagmi/cli": "^1.0.0",
    "eslint": "^8.43.0",
    "eslint-plugin-formatjs": "^4.10.3",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "eslint-plugin-tsdoc": "^0.2.17",
    "gh-pages": "^5.0.0",
    "lint-staged": "^13.2.2",
    "pre-commit": "^1.2.2",
    "prettier": "^2.8.8",
    "prettier-plugin-jsdoc": "^0.4.2",
    "prettier-plugin-sh": "^0.12.8",
    "prettier-plugin-solidity": "^1.1.3",
    "read-file-utf8": "^3.0.0",
    "sass": "^1.62.1",
    "ts-jest": "^29.1.1",
    "typescript": "^5.0.4",
    "vite": "^4.3.5",
    "write-file-utf8": "^3.0.2"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "lint-staged": {
    "*.{cjs,js,json,ts,tsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{css,md,scss,sh,sol}": [
      "prettier --write"
    ]
  },
  "pre-commit": [
    "check_types",
    "lint-staged"
  ],
  "prettier": {
    "plugins": [
      "prettier-plugin-jsdoc",
      "prettier-plugin-sh",
      "prettier-plugin-solidity"
    ],
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx"
        ],
        "options": {
          "tsdoc": true
        }
      }
    ]
  }
}
