/* eslint-disable no-console */
import { exec } from "node:child_process";
import { argv, exit } from "node:process";
import { promisify } from "node:util";

import read from "read-file-utf8";
import write from "write-file-utf8";

const run = promisify(exec);
const contractNames = ["NicknameRegistry", "PollFactoryMVP"];

try {
  // Get contract name from first argument.

  const CONTRACT_NAME = argv[2];
  if (!CONTRACT_NAME) throw new Error(`Missing CONTRACT_NAME argument`);
  if (!contractNames.includes(CONTRACT_NAME))
    throw new Error(`Unknown contract "${CONTRACT_NAME}"`);

  // Read private key from anvil config which is generated by `npm run local-blockchain`.

  const anvilConfig = await read("local-blockchain/anvil-config.json");

  const PRIVATE_KEY = anvilConfig.private_keys[0];
  if (!PRIVATE_KEY) throw new Error("Cannot get PRIVATE_KEY");

  // Run command to deploy contract, notice the `--json` flag.

  const command = `forge create contracts/src/${CONTRACT_NAME}.sol:${CONTRACT_NAME} --rpc-url http://localhost:8545 --private-key ${PRIVATE_KEY} --json`;
  console.info(command);

  const { stdout } = await run(command);

  // Write the command output to related JSON file.

  await write(`local-blockchain/${CONTRACT_NAME}.json`, stdout);
} catch (error) {
  console.error(error);
  exit(1);
}
